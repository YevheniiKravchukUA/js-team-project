class Read {
  constructor() {
    this.jsonReadNews = localStorage.getItem('alreadyReadNews');
    this.readNews = this.dataFromLocalStorage(this.jsonReadNews) || [];
    // –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞, —Å—é–¥–∞ –∏—Ö –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —á—Ç–æ–± –ø–æ—Ç–æ–º –∏—Å–∫–∞—Ç—å –≤ –Ω–∏—Ö –ø–æ –∞–π–¥–∏ –Ω—É–∂—ã–π –æ–±—å–µ–∫—Ç
    this.newsArr = [];
  }

  getJsonFromLocalStorage(key) {
    const json = localStorage.getItem(key);
    return json;
  }

  dataFromLocalStorage(json) {
    try {
      const data = JSON.parse(json);
      return data;
    } catch (error) {
      console.log(error.name);
      console.log(error.message);
    }
  }

  findCheckedNew(currentItemID) {
    return this.newsArr.find(item => item.id === currentItemID);
  }
  getCurrentDate() {
    const date = new Date();

    return `${String(date.getDate())}/${String(date.getMonth() + 1)}/${String(
      date.getFullYear()
    )}`;
  }

  saveToLocalStorage() {
    localStorage.setItem('alreadyReadNews', JSON.stringify(this.readNews));
  }
  leaveUniqueNews() {
    // toDo create filterUnique finction
  }
}

export const alreadyRead = new Read();

export function handleReadMoreBtnClick(e) {
  const currentItemID = Number(
    e.target.parentNode.parentNode.getAttribute('data-id')
  );

  console.log('readNews -->', alreadyRead.readNews);

  const json = alreadyRead.getJsonFromLocalStorage('NewsFromHome');
  const news = alreadyRead.dataFromLocalStorage(json); // –ø–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –ª–æ–∫–∞–ª–°

  alreadyRead.newsArr = news; // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞

  const checkedNew = alreadyRead.findCheckedNew(currentItemID); //–ø–æ–ª—É—á–∞–µ–º –æ–±—å–µ–∫—Ç –æ—Ç–º–µ—á–µ–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–∏
  console.log('üÜë  checkedNew', checkedNew);

  const todayNews = {
    date: `${alreadyRead.getCurrentDate()}`,
    news: checkedNew,
  };

  alreadyRead.readNews.push(todayNews); // –ø—É—à–∏–º –≤ –º–∞—Å—Å–∏–≤ –∏–∑ –õ–æ–∫–∞–ª–° –∏–ª–∏ –ø—É—Å—Ç–æ–π

  // alreadyRead.leaveUniqueNews();
  alreadyRead.saveToLocalStorage();
}

// Render markup on page Read from localStorage`s data

// common arr in localStorage []
// arr with read-news today
//    [{date:30.01.2023, news: {...}, {....}, {....}}] - arr on every date
