{"mappings":"AECA,uCAMA,4BAKA,gBAMA,uDAeA,mEAOA,sBAMA,8GAMA,iBAKA,iCAMA,0CAOA,uICtEA,mGCwBM,oCDxBN,wBCwBM,oCDxBN,wBCwBM,qCDxBN,yBEAA,gEAEE,oCAFF,uGAKE,qCALF,4GASA,mEAKA,4CAMA","sources":["favorite.2f5912c2.css","src/sass/index.scss","src/sass/base/_normilize.scss","src/sass/base/_container.scss","src/sass/base/mixins/_media.scss","src/sass/components/news-section.scss","src/sass/base/mixins/_positions.scss"],"sourcesContent":["*, :before, :after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\nul, ol {\n  padding: 0;\n}\n\nbody, h1, h2, h3, h4, p, ul, ol, li, figure, figcaption {\n  margin: 0;\n}\n\nbody {\n  min-height: 100vh;\n  text-rendering: optimizespeed;\n  line-height: 1.5;\n}\n\nul, ol {\n  list-style: none;\n}\n\na {\n  -webkit-text-decoration-skip-ink: auto;\n  text-decoration-skip-ink: auto;\n  color: currentColor;\n  text-decoration: none;\n}\n\nbutton {\n  padding: 0;\n}\n\nimg {\n  max-width: 100%;\n  display: block;\n}\n\ninput, button, textarea, select {\n  font: inherit;\n}\n\ninput::-webkit-outer-spin-button, input::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  -ms-appearance: none;\n  appearance: none;\n  margin: 0;\n}\n\n.container {\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 16px;\n  padding-right: 16px;\n}\n\n@media screen and (min-width: 427px) {\n  .container {\n    width: 427px;\n  }\n}\n\n@media screen and (min-width: 768px) {\n  .container {\n    width: 768px;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .container {\n    width: 1280px;\n  }\n}\n\n.news__list {\n  grid-template-columns: 1fr;\n  row-gap: 28px;\n  display: grid;\n}\n\n@media screen and (min-width: 768px) {\n  .news__list {\n    grid-template-columns: repeat(auto-fit, minmax(calc(50% - 15px), 1fr));\n    gap: 30px;\n    display: grid;\n  }\n}\n\n@media screen and (min-width: 1280px) {\n  .news__list {\n    grid-template-columns: repeat(auto-fit, minmax(calc(50% - 16px), 1fr));\n    gap: 40px 32px;\n    display: grid;\n  }\n}\n\n.news__image {\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.news__title, .news__text {\n  margin-bottom: 20px;\n}\n\n.news__lower-box {\n  justify-content: space-between;\n  display: flex;\n}\n\n/*# sourceMappingURL=favorite.2f5912c2.css.map */\n","@import './base/base-main';\n@import './components/components-main.scss';\n","/* Указываем box sizing */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Убираем внутренние отступы */\nul,\nol {\n  padding: 0;\n}\n\n/* Убираем внешние отступы */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul,\nol,\nli,\nfigure,\nfigcaption {\n  margin: 0;\n}\n\n/* Выставляем основные настройки по-умолчанию для body */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* Удаляем стандартную стилизацию для всех ul и il, у которых есть атрибут class*/\nul,\nol {\n  list-style: none;\n}\n\n/* Элементы a, у которых нет класса, сбрасываем до дефолтных стилей */\na {\n  text-decoration-skip-ink: auto;\n  text-decoration: none;\n  color: currentColor;\n}\n\nbutton {\n  padding: 0px;\n}\n\n/* Упрощаем работу с изображениями */\nimg {\n  max-width: 100%;\n  display: block;\n}\n\n/* Наследуем шрифты для инпутов и кнопок */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  appearance: none;\n  -webkit-appearance: none;\n  margin: 0;\n}\n",".container {\n  min-width: 320px;\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @include media-min(mobile-resp) {\n    width: 427px;\n  }\n\n  @include media-min(tablet) {\n    width: 768px;\n  }\n\n  @include media-min(desktop) {\n    width: 1280px;\n  }\n}\n","$media-max: (\n  'mobile': 767px,\n  'tablet': 1279px,\n);\n\n$media-min: (\n  'mobile-resp': 427px,\n  'tablet': 768px,\n  'desktop': 1280px,\n);\n\n@mixin media-max($breakpoint) {\n  @each $breakpoints, $size in $media-max {\n    @if $breakpoint==$breakpoints {\n      @media screen and (max-width: $size) {\n        @content;\n      }\n    }\n  }\n}\n\n@mixin media-min($breakpoint) {\n  @each $breakpoints, $size in $media-min {\n    @if $breakpoint==$breakpoints {\n      @media screen and (min-width: $size) {\n        @content;\n      }\n    }\n  }\n}\n\n@mixin retina {\n  @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    @content;\n  }\n}\n",".news__list {\n  @include grid-fixed(1, 28px, 30px);\n  @media screen and (min-width: 768px) {\n    @include grid-fixed(2, 30px, 30px);\n  }\n  @media screen and (min-width: 1280px) {\n    @include grid-fixed(2, 40px, 32px);\n  }\n}\n.news__image {\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n}\n.news__title {\n  margin-bottom: 20px;\n}\n.news__text {\n  margin-bottom: 20px;\n}\n.news__lower-box {\n  display: flex;\n  justify-content: space-between;\n}\n","@mixin flexed($justify: center, $align: center) {\n  display: flex;\n  justify-content: $justify;\n  align-items: $align;\n}\n\n@mixin absolute($top: 50%, $left: 50%, $X: -50%, $Y: -50%) {\n  position: absolute;\n  top: $top;\n  left: $left;\n  transform: translate($X, $Y);\n}\n\n// How to use:\n// @include flexed(justify-content, align items):\n// display:flex - идет по умолчанию\n// Если ичего не передавать в аргументах, то justify-content и align-items будут иметь значение center.\n// Подобная ситуация с абсолюбом, только значений больше, 1й аргумент - top, 2й - left, 3й - translateX, 4й - translateY\n// Если ничего не указать. то элемент станет по центру родителя имеющего position отличную от static.\n\n@mixin grid-fixed($columns: 1, $row-gap: 0, $column-gap: 0) {\n  display: grid;\n\n  grid-template-columns: 1fr;\n  row-gap: $row-gap;\n\n  @if $columns >= 2 {\n    @if $column-gap >= 1 {\n      grid-template-columns: repeat(\n        auto-fit,\n        minmax(calc((100% - ($column-gap * ($columns - 1))) / $columns), 1fr)\n      );\n      row-gap: $row-gap;\n      column-gap: $column-gap;\n    } @else {\n      grid-template-columns: repeat(\n        auto-fit,\n        minmax(calc(100% / $columns), 1fr)\n      );\n      row-gap: $row-gap;\n      column-gap: $column-gap;\n    }\n  }\n}\n"],"names":[],"version":3,"file":"favorite.2f5912c2.css.map"}